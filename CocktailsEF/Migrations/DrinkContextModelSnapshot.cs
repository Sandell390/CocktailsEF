// <auto-generated />
using CocktailsEF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CocktailsEF.Migrations
{
    [DbContext(typeof(DrinkContext))]
    partial class DrinkContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AmountIngredientDrink", b =>
                {
                    b.Property<int>("DrinksID")
                        .HasColumnType("int");

                    b.Property<int>("AmountIngredientIngredientID")
                        .HasColumnType("int");

                    b.Property<int>("AmountIngredientAmountID")
                        .HasColumnType("int");

                    b.HasKey("DrinksID", "AmountIngredientIngredientID", "AmountIngredientAmountID");

                    b.HasIndex("AmountIngredientIngredientID", "AmountIngredientAmountID");

                    b.ToTable("AmountIngredientDrink");
                });

            modelBuilder.Entity("CocktailsEF.Amount", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<float>("Number")
                        .HasColumnType("float");

                    b.Property<string>("Unite")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("ID")
                        .IsUnique();

                    b.ToTable("Amounts");
                });

            modelBuilder.Entity("CocktailsEF.AmountIngredient", b =>
                {
                    b.Property<int>("IngredientID")
                        .HasColumnType("int");

                    b.Property<int>("AmountID")
                        .HasColumnType("int");

                    b.HasKey("IngredientID", "AmountID");

                    b.HasIndex("AmountID");

                    b.ToTable("AmountIngredients");
                });

            modelBuilder.Entity("CocktailsEF.Drink", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ID")
                        .IsUnique();

                    b.ToTable("Drinks");
                });

            modelBuilder.Entity("CocktailsEF.Ingredient", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("Ingredient");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Ingredient");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("CocktailsEF.Liquid", b =>
                {
                    b.HasBaseType("CocktailsEF.Ingredient");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasIndex("ID")
                        .IsUnique();

                    b.HasDiscriminator().HasValue("Liquid");
                });

            modelBuilder.Entity("CocktailsEF.XtraIngredient", b =>
                {
                    b.HasBaseType("CocktailsEF.Ingredient");

                    b.HasIndex("ID")
                        .IsUnique();

                    b.HasDiscriminator().HasValue("XtraIngredient");
                });

            modelBuilder.Entity("AmountIngredientDrink", b =>
                {
                    b.HasOne("CocktailsEF.Drink", null)
                        .WithMany()
                        .HasForeignKey("DrinksID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CocktailsEF.AmountIngredient", null)
                        .WithMany()
                        .HasForeignKey("AmountIngredientIngredientID", "AmountIngredientAmountID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CocktailsEF.AmountIngredient", b =>
                {
                    b.HasOne("CocktailsEF.Amount", "Amount")
                        .WithMany()
                        .HasForeignKey("AmountID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CocktailsEF.Ingredient", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Amount");

                    b.Navigation("Ingredient");
                });
#pragma warning restore 612, 618
        }
    }
}
